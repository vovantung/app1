pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: kaniko
spec:
  containers:
    - name: jnlp
      image: jenkins/inbound-agent:latest
      tty: true
    - name: maven
      image: maven:3.9.4-eclipse-temurin-17
      tty: true
      volumeMounts:
        - name: workspace-volume
          mountPath: /workspace
    - name: kaniko
      image: gcr.io/kaniko-project/executor:v1.23.0
      tty: true
      volumeMounts:
        - name: workspace-volume
          mountPath: /workspace
        - name: docker-config
          mountPath: /kaniko/.docker
  volumes:
    - name: workspace-volume
      emptyDir: {}
    - name: docker-config
      secret:
        secretName: ecr-secret  # <- Tên secret chứa config để push ECR
"""
        }
    }

    environment {
        AWS_REGION = "ap-southeast-1"
        ECR_REGISTRY = "211125364313.dkr.ecr.ap-southeast-1.amazonaws.com"
        IMAGE_NAME = "app1"
        IMAGE_TAG = "latest"
    }

    stages {
        stage('Clone & Build with Maven') {
            steps {
                container('maven') {
                    sh '''
                        mvn clean package -DskipTests
                        cp -r . /workspace/
                    '''
                }
            }
        }

        stage('Build & Push Docker image with Kaniko') {
            steps {
                container('kaniko') {
                    sh '''
                        DESTINATION="$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
                        /kaniko/executor \
                          --context=/workspace \
                          --dockerfile=/workspace/Dockerfile \
                          --destination=$DESTINATION \
                          --verbosity=info \
                          --reproducible \
                          --cache=false \
                          --skip-tls-verify
                    '''
                }
            }
        }
    }
}
