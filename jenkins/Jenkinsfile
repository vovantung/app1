pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:latest
    tty: true
  - name: maven
    image: maven:3.9-eclipse-temurin-17
    command: ['cat']
    tty: true
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command: ['cat']
    tty: true
    volumeMounts:
      - name: workspace-volume
        mountPath: /workspace
      - name: docker-config
        mountPath: /kaniko/.docker
  volumes:
    - name: workspace-volume
      emptyDir: {}
    - name: docker-config
      secret:
        secretName: ecr-secret  # <- Tên secret chứa config để push ECR
"""
    }
  }

  environment {
    AWS_REGION = "ap-southeast-1"
    ECR_REGISTRY = "211125364313.dkr.ecr.ap-southeast-1.amazonaws.com"
    IMAGE_NAME = "app1"
    IMAGE_TAG = "latest"
  }

  stages {

    stage('Clone Source') {
      steps {
        container('maven') {
          git url: 'https://github.com/vovantung/app1.git', branch: 'main'
        }
      }
    }

    stage('Clone & Build with Maven') {
      steps {
        container('maven') {
          sh '''
            mvn clean package -DskipTests
            cp -r . /workspace/
          '''
        }
      }
    }

    stage('Kaniko build, push image to ecr') {
      steps {
        container('kaniko') {
          sh '''
            echo ">>> Checking workspace content:"
            ls -la /workspace
            echo ">>> Start Kaniko build"
            /kaniko/executor \
              --context=/workspace \
              --dockerfile=/workspace/Dockerfile \
              --destination=${ECR_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG} \
              --verbosity=info \
              --reproducible \
              --cache=false \
              --skip-tls-verify
          '''
        }
      }
    }



  }
}
