pipeline {
 environment {
        DOCKER_IMAGE = "211125364313.dkr.ecr.ap-southeast-1.amazonaws.com/app1:latest"
    }
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins/jenkins-kaniko: "true"
spec:
  containers:
  - name: maven
    image: maven:3.9.6-eclipse-temurin-17
    command:
    - cat
    tty: true
    volumeMounts:
    - name: maven-cache
      mountPath: /root/.m2
  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
    args:
    - --dockerfile=/workspace/Dockerfile
    - --context=/workspace/
    - --destination=211125364313.dkr.ecr.ap-southeast-1.amazonaws.com/app1:latest
    - --verbosity=debug
    volumeMounts:
    - name: docker-config
      mountPath: /kaniko/.docker/
  volumes:
  - name: docker-config
    secret:
      secretName: ecr-secret
  - name: maven-cache
    emptyDir: {}
  restartPolicy: Never
"""
        }
    }



    stages {
        stage('Checkout') {
            steps {
                container('maven') {
                    checkout scm
                }
            }
        }

        stage('Build with Maven') {
            steps {
                container('maven') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                container('kaniko') {
                    // Kaniko sẽ chạy tự động nhờ args đã cấu hình trong podTemplate
                    echo "Kaniko started..."
                }
            }
        }
    }
}
